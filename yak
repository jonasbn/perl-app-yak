#!/usr/bin/env perl

use strict;
use warnings;
use JSON; # from_json
use Crypt::Digest::SHA256 qw(sha256_file_hex); # Provided by CryptX
use Env qw($HOME);
use Data::Dumper;
use File::Find;
use List::MoreUtils qw(any);
use Term::ANSIColor qw(:constants);

our $VERSION = '1.0.0';

our $verbose = 1;

open CONFIG, '<', "$HOME/.config/yak/checksums.json";
my $json = join '', <CONFIG>;
close CONFIG;

my $config = from_json($json);

#my $checksum = $config->{'CODE_OF_CONDUCT.md'};

print "$0 : $VERSION\n";

if (defined $ARGV[0]) {
    my $file_checksum = sha256_file_hex($ARGV[0]);
} else {
    find(\&wanted, qw(.));
}

sub wanted {
    my $file = $_;

    if (-f $file and any { $file eq $_ } keys %{$config} ) {

        my $checksum = $config->{$file};
        my $file_checksum = sha256_file_hex($file);

        if ($file_checksum eq $checksum) {
            print STDERR  GREEN, "üëçüèª$File::Find::name\n", RESET;
        } else {
            print STDERR RED, "‚ùóÔ∏è$File::Find::name\n", RESET;
        }
    } elsif (-f $file and $verbose) {
        print STDERR FAINT, "  $File::Find::name skipped\n", RESET;
    }
}

exit 0;

__END__

=pod

=head1 yak

yak - script to help with yak shaving for GitHub projects

=head1 ISSUE REPORTING

If you experience any issues with C<yak> report these via GitHub. Please read  L<the issue reporting template|https://github.com/jonasbn/yak/blob/master/.github/ISSUE_TEMPLATE.md>.

=head1 AUTHOR

=over

=item jonasbn E<lt>jonasbn@cpan.orgE<gt>

=back

=head1 DEVELOPMENT

If you want to contribute to C<yak> please read the L<Contribution guidelines|https://github.com/jonasbn/yak/blob/master/CONTRIBUTING.md>
and follow L<the pull request guidelines|https://github.com/jonasbn/yak/blob/master/.github/PULL_TEMPLATE.md>.


=head1 COPYRIGHT

yak is (C) by Jonas B. Nielsen, (jonasbn) 2018

Image used on the yak L<website|https://jonasbn.github.io/yak/> is under copyright by L<Shane Aldendorff|https://unsplash.com/photos/3b3O75X0Jzg>

=head1 LICENSE

yak is released under the MIT License

=cut
